name: Cache-evict-attack

on:
  workflow_dispatch:
  push:

env:
  GO_VERSION: "1.18"

jobs:
  reserve-cache:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore go cache
        id: go-cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}

  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.value }}
    steps:
      - id: matrix
        run: |
          range=$(seq 0 60)
          LIST=$(jq -ncR '[inputs]' <<< "$range")
          echo $LIST
          echo "test name=value::$LIST"
          echo "::set-output name=value::$LIST"

  debug-matrix:
    needs: [setup]
    runs-on: ubuntu-latest
        
    steps:
      - name: random data
        run: |
          echo ${{needs.setup.outputs.matrix}}


  evict-cache:
    needs: [reserve-cache,setup]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        value: ${{fromJson(needs.setup.outputs.matrix)}}
        # size:
          # list your packages here
          # - 5G
          # - 4G
          # - 800M
          # - 400M
          # - 100M
          # - 50M
          # - 40M
          # - 30M
          # - 20M
          # - 19M
          # - 18M
          # - 17M
          # - 16M
          # - 15M
          # - 14M
          # - 13M
          # - 12M
          # - 11M
          # - 10M
          # - 9M
          # - 8M
          # - 7M
          # - 6M
          # - 5M
          # - 4M
          # - 3M
          # - 2M
          # - 1M
          # - 500
          # - 200
          # - 100
          # - 50
          # - 30
          # - 20
          # - 10
          # - 9
          # - 8
          # - 7
          # - 6
          # - 5
          # - 4
          # - 3
          # - 2
          # - 1
          # - 0
        
    steps:
      - name: random data
        run: |
          head -c ${{ matrix.value }} </dev/urandom > randomfile


      - name: Evict cache
        id: evict-cache
        uses: actions/cache@v2
        with:
          # upload-chunk-size: 10737418240
          path: |
            randomfile
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-evict-cache-${{ matrix.value }}

      - name: random data
        run: |
          head -c 5G </dev/urandom > randomfile2

  test-cache:
    needs: [evict-cache]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore go cache
        id: go-cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}


      # - name: Test eviction
      #   id: test-eviction
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/go/pkg/mod
      #     key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}

      # - name: Evict cache3
      #   id: evict-cache3
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       randomfile3
      #     key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-evict-cache3

      # - name: random data
      #   run: |
      #     head -c 5G </dev/urandom > randomfile4

      # - name: Evict cache4
      #   id: evict-cache4
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       randomfile4
      #     key: ${{ runner.os }}-go-${{ env.GO_VERSION }}--evict-cache4

      # - uses: actions/setup-go@v2
      #   with:
      #     go-version: ${{ env.GO_VERSION }}

      # - name:
      #   run: |
      #     go mod tidy
      #     ls -lh ~/go/pkg/mod